# .github/workflows/ci-cd.yml
name: CI/CD Pipeline for Spotlight Blog

on:
  push:
    branches: [ main ] # 'main' 브랜치에 푸시될 때 실행
  pull_request:
    branches: [ main ] # 'main' 브랜치로 Pull Request가 올 때 실행 (배포는 안 함)

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # GitHub 저장소 코드 가져오기 (최신 버전 권장)

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Node.js 환경 설정 (최신 버전 권장)
        with:
          node-version: '20.x' # spotlight-ts 및 Next.js 최신 버전에 맞는 Node.js LTS 버전 사용
          cache: 'npm' # npm 의존성 캐싱으로 빌드 속도 향상

      - name: Install dependencies
        run: npm ci # package-lock.json 기반으로 의존성 설치

      - name: Run linters # 테스트 대신 lint 실행 (spotlight-ts 기본 스크립트)
        run: npm run lint

  deploy:
    name: Deploy to Vultr
    needs: test # 'test' 작업이 성공해야 실행
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # 'main' 브랜치로 'push'될 때만 실행
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vultr via SSH
        uses: appleboy/ssh-action@master # SSH 액션 (버전 태그 사용 권장: 예: @v1.0.3)
        with:
          host: ${{ secrets.VULTR_HOST }}
          username: ${{ secrets.VULTR_USERNAME }}
          key: ${{ secrets.VULTR_SSH_KEY }} # SSH 비공개 키
          script: |
            echo "Starting deployment to Vultr server..."
            cd ~/spotlight-ts  # Vultr 서버 내 프로젝트 경로 (사용자 홈 디렉토리 기준)
            echo "Pulling latest changes..."
            git pull origin main # main 브랜치의 최신 코드를 가져옴 (develop 브랜치를 사용한다면 develop으로 변경)
            echo "Installing dependencies..."
            npm install --production=false # 빌드 스크립트 실행에 devDependencies가 필요할 수 있음
            echo "Building project..."
            npm run build
            echo "Restarting PM2 application..."
            pm2 restart spotlight-app # PM2로 실행 중인 앱 이름
            echo "Deployment finished."